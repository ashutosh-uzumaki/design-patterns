Dependency Inversion Principle


High Level Modules should not depend on the low level modules.
But both should depend on Abstractions.                                     

BAD CODE:-

class MySqlDatabase{
    void connect(){
        System.out.println("Connected to MySQL);
    }
}

clas Application{
    private MySqlDatabase database;

    public Application(MySqlDatabase database){
        this.database = database;
    }

    public void start(){
        database.connect();
    }
}

Now this is tightly coupled.

REFACTORED CODE:-

interface Database{
    void connect();
}

class MySqlDatabase implements Database{
    @Override
    void connect(){
        System.out.println("Connected to MySQL);    
    }
}

class PostgreSQL implements Database{
    @Override
    void connect(){
        System.out.println("Connected to PostgreSQL);           
    }
}

class Application{
    private Database database;

    public Application(Database database){
        this.database = database;
    }

    public void start(){
        database.connect();     
    }
}

Now the code is loosely coupled.